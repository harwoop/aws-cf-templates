{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AOP External ELB with Security Group.",
	"Parameters": {
		"HostName": {
			"Description" : "Base hostname for access to services",
			"Type": "String",
			"Default" : "external-elb"
		},
		"EnvType" : {
			"Description" : "Enviroment Type",
			"Default" : "staging",
			"Type" : "String"
		},
		"VPCId" : {
			"Description" : "A VPC ID.",
			"Default": "vpc-273cd342",
			"Type": "String"
		},
		"PublicSubnets" : {
			"Type" : "CommaDelimitedList",
			"Description" : "List of deployment subnets",
			"Default" : "subnet-b0f293d5, subnet-d5b138a2, subnet-29f35170"
		},
		"LoggingBucket" : {
			"Description" : "Name of the shared logging bucket",
			"Type" : "String"
		},
		"DomainName": {
			"Description" : "Base domain name",
			"Type": "String",
			"Default" : "aop.cambridge.org"
		},  
		"DNSZoneId" : {
			"Default" : "",
			"Description" : "ZoneId of our Route53 DNS",
			"Type" : "String"
		},
		"CertificateARN" : {
			"Description" : "Certficate to use to encrypt HTTPS traffic",
			"Type" : "String"
		}
	},
	
	"Resources" : {
	
		"PublicELBSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable HTTP access on port 80 and 443",
				"VpcId" : { "Ref" : "VPCId"},
				"SecurityGroupIngress" : [ 
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "121.97.40.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "131.111.158.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "91.240.3.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "192.153.213.48/29" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "131.111.157.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "131.111.158.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "131.111.159.0/24" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "131.111.19.59/32" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "86.160.164.77/32" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "38.122.225.74/32" }
				],
				"Tags" : [ {
				"Key" : "Name",
					"Value" : { "Fn::Join" : ["", [ { "Ref" : "HostName" }, "-", { "Ref" : "EnvType" }, "-secgroup" ] ] }
				}, {
					"Key" : "aop_env",
					"Value" : { "Ref" : "EnvType" }
				}, {
					"Key" : "aop_role",
					"Value" : { "Ref" : "HostName" }
				}, {
					"Key" : "Business",
					"Value" : "AcPro"
				}, {
					"Key" : "Platform",
					"Value" : "AOP"
				}]
			}
		},
		
		"ElasticLoadBalancer": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties": {
				"Subnets" : { "Ref" : "PublicSubnets" },
				"SecurityGroups" : [ { "Fn::GetAtt" : [ "PublicELBSecurityGroup", "GroupId" ] } ],
				 "Listeners" : [ 
					{
						"LoadBalancerPort" : "443",
						"InstancePort" : "8080",
						"Protocol" : "HTTPS",
						"SSLCertificateId" : { "Ref" : "CertificateARN" }
					}
				],
					
				"HealthCheck": {
					"Target": "HTTP:8080/",
					"HealthyThreshold": "3",
					"UnhealthyThreshold": "5",
					"Interval": "30",
					"Timeout": "5"
				},
				
				"AccessLoggingPolicy": {
					"S3BucketName": { "Ref": "LoggingBucket" },
					"S3BucketPrefix":  { "Fn::Join" : [ "", [ { "Ref" : "EnvType" }, "/", { "Ref" : "HostName" } ] ] },
					"Enabled": "true",
					"EmitInterval" : "60"
				},
				"Tags" : [ {
					"Key" : "aop_env",
					"Value" : { "Ref" : "EnvType" }
				}, {
					"Key" : "aop_role",
					"Value" : { "Ref" : "HostName" }
				}, {
					"Key" : "Business",
					"Value" : "AcPro"
				}, {
					"Key" : "Platform",
					"Value" : "AOP"
				}]
			}
		},

		"elbHostname" : {
			"DependsOn" : "ElasticLoadBalancer",
			"Type" : "AWS::Route53::RecordSet",
			"Properties" : {
				"HostedZoneId" : { "Ref" : "DNSZoneId" },
				"Comment" : "CNAME for public ELB",
				"Name" :  { "Fn::Join" : [ "", [ { "Ref" : "HostName" }, ".", { "Ref" : "EnvType" }, ".", { "Ref" : "DomainName"} ] ] },
				"Type" : "CNAME",
				"TTL" : "300",
				"ResourceRecords" : [ { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ] } ]
			}
		}
	},

	"Outputs" : {
		"PublicELBSecurityGroup": {
			"Value": {"Ref": "PublicELBSecurityGroup"}
		},
		"ELBName" : {
			"Description" : "Name of the ELB",
			"Value" : { "Ref" : "ElasticLoadBalancer" }
		}
	}
}